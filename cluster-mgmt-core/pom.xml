<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.myorg.parent</groupId>
		<artifactId>test-proj-parent</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<groupId>com.myorg.clusterservice</groupId>
	<artifactId>cluster-mgmt-core</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>cluster-management</name>
	<description>A project for cluster management for big data queries.</description>


	<properties>

		<aws.version>1.11.263</aws.version>
		<commons.lang.version>2.6</commons.lang.version>
		<commons.collections.version>3.2.1</commons.collections.version>
		<commons.io.version>2.4</commons.io.version>
		<cfg4j.version>4.4.1</cfg4j.version>
		<guava.version>14.0.1</guava.version>
		<h2.version>1.4.196</h2.version>
		<jackson.version>2.9.2</jackson.version>
		<java.version>1.8</java.version>
		<junit.version>4.12</junit.version>
		<logback.version>1.1.3</logback.version>
		<lombok.version>1.16.20</lombok.version>
		<maven.compiler.target>1.8</maven.compiler.target>
		<maven.compiler.source>1.8</maven.compiler.source>
		<mapstruct.version>1.2.0.Final</mapstruct.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<retrofit.version>2.3.0</retrofit.version>
		<slf4j.version>1.7.5</slf4j.version>
		<spring.boot.version>1.5.3.RELEASE</spring.boot.version>
		<vertx.version>3.4.2</vertx.version>
		<prometheus.version>0.0.26</prometheus.version>

	</properties>

	<dependencies>

		<dependency>
			<groupId>com.myorg.clusterservice</groupId>
			<artifactId>databricks-client</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- BEGIN: Apache Commons dependencies -->
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>${commons.lang.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>${commons.collections.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons.io.version}</version>
		</dependency>
		<!-- END: Apache Commons dependencies -->


		<!--- DataBase Dependenices -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.38</version>
		</dependency>
		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
			<version>2.7.1</version>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.4.196</version>
			<scope>test</scope>
		</dependency>

		<!--- Hibernate Dependencies -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-envers</artifactId>
			<version>5.2.11.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-ehcache</artifactId>
			<version>5.2.11.Final</version>
		</dependency>

		<!-- BEGIN: Spring dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-dependencies</artifactId>
			<version>${spring.boot.version}</version>
			<type>pom</type>
			<scope>import</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<version>${spring.boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>${spring.boot.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
			<version>${spring.boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<version>${spring.boot.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
			<version>${spring.boot.version}</version>
		</dependency>


		<!-- <dependency> <groupId>com.h2database</groupId> <artifactId>h2</artifactId>
			<scope>runtime</scope> <version>${h2.version}</version> </dependency> -->

		<!-- END: Spring dependencies -->

		<!-- BEGIN: Vertx dependencies -->
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-core</artifactId>
			<version>${vertx.version}</version>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-web</artifactId>
			<version>${vertx.version}</version>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-auth-common</artifactId>
			<version>${vertx.version}</version>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-auth-jwt</artifactId>
			<version>${vertx.version}</version>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-unit</artifactId>
			<version>${vertx.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- END: Vertx dependencies -->

		<!-- Removed : Codehaus Jackson dependencies as Jackson has moved from
			Codehaus to Github when releasing Jackson 2. -->
		<!-- com.fasterxml.jackson represents the new project and package -->
		<!-- REF: https://stackoverflow.com/questions/30782706/org-codehaus-jackson-versus-com-fasterxml-jackson-core
			<dependency> <groupId>com.fasterxml.jackson.core</groupId> <artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version> </dependency> <dependency> <groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId> <version>2.9.2</version> </dependency> -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson.version}</version>
		</dependency>

		<!-- START: Validation dependencies -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>2.0.0.Final</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-validator -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>6.0.6.Final</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-validator-annotation-processor -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator-annotation-processor</artifactId>
			<version>6.0.6.Final</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.el</artifactId>
			<version>3.0.1-b08</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator-cdi</artifactId>
			<version>6.0.6.Final</version>
		</dependency>
		<!-- END: Validation dependencies -->

		<!-- BEGIN: AWS dependencies -->
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk-core</artifactId>
			<version>${aws.version}</version>
		</dependency>
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk-emr</artifactId>
			<version>${aws.version}</version>
		</dependency>
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk-s3</artifactId>
			<version>${aws.version}</version>
		</dependency>
		<!-- END: AWS dependencies -->

		<!-- BEGIN: Configuration dependencies -->
		<dependency>
			<groupId>org.cfg4j</groupId>
			<artifactId>cfg4j-core</artifactId>
			<version>${cfg4j.version}</version>
		</dependency>
		<!-- END: Configuration dependencies -->

		<!-- BEGIN: Google dependencies -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
		</dependency>
		<!-- END: Google dependencies -->

		<!-- BEGIN: https://mvnrepository.com/artifact/org.projectlombok/lombok -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<scope>provided</scope>
		</dependency>
		<!-- END: https://mvnrepository.com/artifact/org.projectlombok/lombok -->

		<!-- BEGIN: MapStruct Dependencies -->
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId> <!-- use mapstruct-jdk8 for Java 8 or higher -->
			<version>${mapstruct.version}</version>
		</dependency>
		<!-- END: MapStruct Dependencies -->

		<!-- BEGIN: Retrofit Dependencies -->
		<dependency>
			<groupId>com.squareup.retrofit2</groupId>
			<artifactId>converter-gson</artifactId>
			<version>${retrofit.version}</version>
		</dependency>
		<dependency>
			<groupId>com.squareup.retrofit2</groupId>
			<artifactId>retrofit</artifactId>
			<version>${retrofit.version}</version>
		</dependency>
		<!-- END: Retrofit Dependencies -->

		<!-- Vert.x uses the Dropwizard library to collect its own metrics -->
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-dropwizard-metrics</artifactId>
			<version>${vertx.version}</version>
		</dependency>

		<!-- collect Java Virtual Machine metrics -->
		<dependency>
			<groupId>io.prometheus</groupId>
			<artifactId>simpleclient_hotspot</artifactId>
			<version>${prometheus.version}</version>
		</dependency>
		<!-- let Prometheus obtain the metrics from the Dropwizard registry -->
		<dependency>
			<groupId>io.prometheus</groupId>
			<artifactId>simpleclient_dropwizard</artifactId>
			<version>${prometheus.version}</version>
		</dependency>
		<!-- let Prometheus collect log metrics -->
		<dependency>
			<groupId>io.prometheus</groupId>
			<artifactId>simpleclient_log4j2</artifactId>
			<version>${prometheus.version}</version>
		</dependency>
		<!-- expose the metrics in the Prometheus format at http://localhost:8090 -->
		<dependency>
			<groupId>io.prometheus</groupId>
			<artifactId>simpleclient_vertx</artifactId>
			<version>${prometheus.version}</version>
		</dependency>

	</dependencies>

	<build>
		<filters>
			<!-- Ensures that the config.properties file is always loaded from the
				configuration directory of the active Maven profile. -->
			<filter>src/main/config/${build.profile.id}/application.properties</filter>
		</filters>

		<resources>
			<!-- Placeholders that are found from the files located in the configured
				resource directories are replaced with the property values found from the
				profile specific configuration file. i.e. ${jdbc.url} should be the placeholder
				in the actual file and the filter should have jdbc.url=<profile level value> -->
			<resource>
				<filtering>true</filtering>
				<directory>src/main/resources</directory>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5.1</version>
				<configuration>
					<source>1.8</source> <!-- or higher, depending on your project -->
					<target>1.8</target> <!-- or higher, depending on your project -->
					<annotationProcessorPaths>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${mapstruct.version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring.boot.version}</version>
				<configuration>
					<executable>true</executable>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>


			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

		</plugins>
	</build>

</project>
